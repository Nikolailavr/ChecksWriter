services:
  parser:
    build:
      dockerfile: ./docker-build/app/Dockerfile
      context: ./
  app:
    build:
      dockerfile: ./docker-build/app/Dockerfile
      context: ./
    environment:
      APP_CONFIG__DB__ECHO: 0
    ports:
      - "8000:8000"
    depends_on:
      pg:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /app
        - action: rebuild
          path: ./poetry.lock

  pg:
    image: postgres:16.9
    environment:
      POSTGRES_DB: checks
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      pg:
        condition: service_healthy

  celery:
    build:
      context: ./
      dockerfile: ./docker-build/app/Dockerfile
    command: celery -A app.celery.celery_app worker --loglevel=info
    volumes:
      - .:/app
    working_dir:
      /app
    environment:
      - PYTHONPATH=/app/src
    depends_on:
      pg:
        condition: service_healthy

  flower:
      build:
        context: .
        dockerfile: ./docker-build/app/Dockerfile
      command: flower --broker=sqla+postgresql://user:password@pg/checks --port=5555
      volumes:
        - .:/app
      working_dir: /app
      environment:
        - PYTHONPATH=/app/src
        - CELERY_BROKER_URL=sqla+postgresql://user:password@pg/checks
      ports:
        - "5555:5555"
      depends_on:
        pg:
          condition: service_healthy
volumes:
  pgdata: