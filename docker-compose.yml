services:
  bot:
    build:
      dockerfile: ./docker-build/app/Dockerfile_bot
      context: ./
    command: python3 main.py
    volumes:
      - shared-data:/app/shared
    environment:
      APP_CONFIG__DB__ECHO: 0
    ports:
      - "8002:8000"
    depends_on:
      pg:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /app
        - action: rebuild
          path: ./poetry.lock

  pg:
    image: postgres:16.9
    environment:
      POSTGRES_DB: checks
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3

#  pgadmin:
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.org
#      PGADMIN_DEFAULT_PASSWORD: admin
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    ports:
#      - "5050:80"
#    depends_on:
#      pg:
#        condition: service_healthy

  celery:
    build:
      context: ./
      dockerfile: ./docker-build/app/Dockerfile
    command: celery -A app.celery.celery_app worker --pool eventlet  --loglevel=info
    volumes:
      - .:/app
      - shared-data:/app/shared
    working_dir:
      /app
    environment:
      - PYTHONPATH=/app/src
    depends_on:
      - redis

  flower:
      build:
        context: .
        dockerfile: ./docker-build/app/Dockerfile_base
      command: celery -A app.celery.celery_app flower --port=5555
      volumes:
        - .:/app
      working_dir: /app
      environment:
        - PYTHONPATH=/app/src
      ports:
        - "5555:5555"
      depends_on:
        - redis
  redis:
    image: redis:8
    container_name: redis
    ports:
      - "6379:6379"
volumes:
  pgdata:
  shared-data: