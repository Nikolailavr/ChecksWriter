"""rename tales celery

Revision ID: e26f619026cb
Revises: cd43dfe509f9
Create Date: 2025-06-03 12:59:38.605143

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "e26f619026cb"
down_revision: Union[str, None] = "cd43dfe509f9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "celery_group_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.String(length=255), nullable=False),
        sa.Column("result", sa.PickleType(), nullable=False),
        sa.Column("date_done", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_celery_group_results")),
        sa.UniqueConstraint(
            "group_id", name=op.f("uq_celery_group_results_group_id")
        ),
    )
    op.create_table(
        "celery_task_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("result", sa.PickleType(), nullable=False),
        sa.Column("date_done", sa.DateTime(), nullable=False),
        sa.Column("traceback", sa.Text(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("args", sa.Text(), nullable=False),
        sa.Column("kwargs", sa.Text(), nullable=False),
        sa.Column("worker", sa.String(length=100), nullable=False),
        sa.Column("retries", sa.Integer(), nullable=False),
        sa.Column("queue", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_celery_task_results")),
        sa.UniqueConstraint(
            "task_id", name=op.f("uq_celery_task_results_task_id")
        ),
    )
    op.drop_table("group_results")
    op.drop_table("task_results")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "task_results",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "task_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "result", postgresql.BYTEA(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "date_done",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("traceback", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "name", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column("args", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("kwargs", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "worker",
            sa.VARCHAR(length=100),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "retries", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "queue",
            sa.VARCHAR(length=100),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_task_results")),
        sa.UniqueConstraint(
            "task_id",
            name=op.f("uq_task_results_task_id"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_table(
        "group_results",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "group_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "result", postgresql.BYTEA(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "date_done",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_group_results")),
        sa.UniqueConstraint(
            "group_id",
            name=op.f("uq_group_results_group_id"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.drop_table("celery_task_results")
    op.drop_table("celery_group_results")
    # ### end Alembic commands ###
