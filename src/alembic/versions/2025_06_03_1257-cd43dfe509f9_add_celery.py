"""add celery

Revision ID: cd43dfe509f9
Revises: f172863b9ae5
Create Date: 2025-06-03 12:57:18.397029

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cd43dfe509f9"
down_revision: Union[str, None] = "f172863b9ae5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "group_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.String(length=255), nullable=False),
        sa.Column("result", sa.PickleType(), nullable=False),
        sa.Column("date_done", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_group_results")),
        sa.UniqueConstraint(
            "group_id", name=op.f("uq_group_results_group_id")
        ),
    )
    op.create_table(
        "task_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(length=255), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("result", sa.PickleType(), nullable=False),
        sa.Column("date_done", sa.DateTime(), nullable=False),
        sa.Column("traceback", sa.Text(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("args", sa.Text(), nullable=False),
        sa.Column("kwargs", sa.Text(), nullable=False),
        sa.Column("worker", sa.String(length=100), nullable=False),
        sa.Column("retries", sa.Integer(), nullable=False),
        sa.Column("queue", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_task_results")),
        sa.UniqueConstraint("task_id", name=op.f("uq_task_results_task_id")),
    )
    op.create_table(
        "images",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("celery_task_id", sa.String(length=50), nullable=True),
        sa.Column(
            "processing_status",
            sa.Enum("PENDING", "PROCESSING", "DONE", "FAILED", name="status"),
            nullable=False,
        ),
        sa.Column("result_data", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("category", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.telegram_id"],
            name=op.f("fk_images_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_images")),
    )
    op.add_column(
        "receipts", sa.Column("user_id", sa.BigInteger(), nullable=False)
    )
    op.add_column(
        "receipts", sa.Column("category", sa.String(), nullable=True)
    )
    op.create_foreign_key(
        op.f("fk_receipts_user_id_users"),
        "receipts",
        "users",
        ["user_id"],
        ["telegram_id"],
    )
    op.drop_column("receipts", "user")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "receipts",
        sa.Column("user", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(
        op.f("fk_receipts_user_id_users"), "receipts", type_="foreignkey"
    )
    op.drop_column("receipts", "category")
    op.drop_column("receipts", "user_id")
    op.drop_table("images")
    op.drop_table("task_results")
    op.drop_table("group_results")
    # ### end Alembic commands ###
